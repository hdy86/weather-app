{"version":3,"sources":["App.js"],"names":["SCREEN_WIDTH","Dimensions","get","width","icons","Clouds","Clear","Atmosphere","Snow","Rain","Drizzle","Thunderstorm","App","useState","city","setCity","days","setDays","setOk","getWeather","Location","granted","accuracy","coords","latitude","longitude","location","useGoogleMaps","response","fetch","json","daily","console","log","useEffect","style","styles","container","cityName","horizontal","pagingEnabled","showsHorizontalScrollIndicator","contentContainerStyle","weather","length","day","alignItems","color","size","marginTop","map","index","flexDirection","justifyContent","temp","parseFloat","toFixed","name","main","description","tinyText","StyleSheet","create","flex","backgroundColor","fontSize","fontWeight","paddingHorizontal"],"mappings":"82BAYA,IAAeA,EAAiBC,UAAWC,IAAI,UAAvCC,MAIFC,EAAQ,CACZC,OAAQ,SACRC,MAAO,YACPC,WAAY,eACZC,KAAM,OACNC,KAAM,QACNC,QAAS,OACTC,aAAc,aAGD,SAASC,IACtB,MAAwBC,mBAAS,cAAjC,WAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,WAAOG,EAAP,KAAaC,EAAb,KACA,EAAoBJ,oBAAS,GAA7B,WAAWK,GAAX,WACMC,EAAU,sBAAG,mBACSC,uCAAlBC,SAENH,GAAM,GAER,aAEUE,0BAAiC,CAAEE,SAAU,KADrDC,OAAUC,EADZ,EACYA,SAAUC,EADtB,EACsBA,UAEhBC,QAAiBN,sBACrB,CAAEI,WAAUC,aACZ,CAAEE,eAAe,IAEnBZ,EAAQW,EAAS,GAAGZ,MAEpB,IAAMc,QAAiBC,MAAM,uDAC4BL,EAD7B,QAC6CC,EAD5C,uEAGvBK,QAAaF,EAASE,OAC5Bb,EAAQa,EAAKC,OACbC,QAAQC,IAAIH,MAnBE,qDAyBhB,OAJAI,qBAAU,WACRf,MACC,IAGD,eAAC,UAAD,CAAMgB,MAAOC,EAAOC,UAApB,UACE,cAAC,UAAD,CAAMF,MAAOC,EAAOtB,KAApB,SACE,cAAC,UAAD,CAAMqB,MAAOC,EAAOE,SAApB,SAA+BxB,MAEjC,cAAC,UAAD,CACEyB,YAAU,EACVC,eAAa,EACbC,gCAAgC,EAChCC,sBAAuBN,EAAOO,QAJhC,SAMmB,IAAhB3B,EAAK4B,OACJ,cAAC,UAAD,CAAMT,MAAK,OAAOC,EAAOS,KAAd,IAAmBC,WAAY,WAA1C,SACE,cAAC,UAAD,CACEC,MAAM,QACNC,KAAK,QACLb,MAAO,CAAEc,UAAW,QAIxBjC,EAAKkC,KAAI,SAACL,EAAKM,GAAN,OACP,eAAC,UAAD,CAAkBhB,MAAOC,EAAOS,IAAhC,UACE,eAAC,UAAD,CACEV,MAAO,CACLiB,cAAe,MACfC,eAAgB,gBAChBP,WAAY,WACZ3C,MAAO,QALX,UAQE,cAAC,UAAD,CAAMgC,MAAOC,EAAOkB,KAApB,SACGC,WAAWV,EAAIS,KAAKT,KAAKW,QAAQ,KAEpC,cAAC,UAAD,CACEC,KAAMrD,EAAMyC,EAAIF,QAAQ,GAAGe,MAC3BV,KAAM,GACND,MAAM,aAGV,cAAC,UAAD,CAAMZ,MAAOC,EAAOuB,YAApB,SAAkCd,EAAIF,QAAQ,GAAGe,OACjD,cAAC,UAAD,CAAMvB,MAAOC,EAAOwB,SAApB,SAA+Bf,EAAIF,QAAQ,GAAGgB,gBAnBrCR,WA4BvB,IAAMf,EAASyB,UAAWC,OAAO,CAC/BzB,UAAW,CACT0B,KAAM,EACNC,gBAAiB,UAEnBlD,KAAM,CACJiD,KAAM,IACNV,eAAgB,SAChBP,WAAY,UAEdR,SAAU,CACR2B,SAAU,GACVC,WAAY,MACZnB,MAAO,SAETJ,QAAS,GACTE,IAAK,CACH1C,MAAOH,EACP8C,WAAY,aACZqB,kBAAmB,IAErBb,KAAM,CACJL,UAAW,GACXiB,WAAY,MACZD,SAAU,IACVlB,MAAO,SAETY,YAAa,CACXV,WAAY,GACZgB,SAAU,GACVlB,MAAO,QACPmB,WAAY,OAEdN,SAAU,CACRX,WAAY,EACZgB,SAAU,GACVlB,MAAO,QACPmB,WAAY,W","file":"static/js/app.408dff9d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Dimensions,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport * as Location from \"expo-location\";\r\nimport { Fontisto } from \"@expo/vector-icons\";\r\n\r\nconst { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\r\n\r\nconst API_KEY = \"98ac132f34b1ecd3f927e33a9a788821\";\r\n\r\nconst icons = {\r\n  Clouds: \"cloudy\",\r\n  Clear: \"day-sunny\",\r\n  Atmosphere: \"cloudy-gusts\",\r\n  Snow: \"snow\",\r\n  Rain: \"rains\",\r\n  Drizzle: \"rain\",\r\n  Thunderstorm: \"lightning\",\r\n};\r\n\r\nexport default function App() {\r\n  const [city, setCity] = useState(\"Loading...\");\r\n  const [days, setDays] = useState([]);\r\n  const [ok, setOk] = useState(true);\r\n  const getWeather = async () => {\r\n    const { granted } = await Location.requestForegroundPermissionsAsync();\r\n    if (!granted) {\r\n      setOk(false);\r\n    }\r\n    const {\r\n      coords: { latitude, longitude },\r\n    } = await Location.getCurrentPositionAsync({ accuracy: 5 });\r\n    const location = await Location.reverseGeocodeAsync(\r\n      { latitude, longitude },\r\n      { useGoogleMaps: false }\r\n    );\r\n    setCity(location[0].city);\r\n\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=alerts&appid=${API_KEY}&units=metric`\r\n    );\r\n    const json = await response.json();\r\n    setDays(json.daily);\r\n    console.log(json);\r\n  };\r\n  useEffect(() => {\r\n    getWeather();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.city}>\r\n        <Text style={styles.cityName}>{city}</Text>\r\n      </View>\r\n      <ScrollView\r\n        horizontal\r\n        pagingEnabled\r\n        showsHorizontalScrollIndicator={false}\r\n        contentContainerStyle={styles.weather}\r\n      >\r\n        {days.length === 0 ? (\r\n          <View style={{ ...styles.day, alignItems: \"center\" }}>\r\n            <ActivityIndicator\r\n              color=\"white\"\r\n              size=\"large\"\r\n              style={{ marginTop: 10 }}\r\n            />\r\n          </View>\r\n        ) : (\r\n          days.map((day, index) => (\r\n            <View key={index} style={styles.day}>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"flex-end\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <Text style={styles.temp}>\r\n                  {parseFloat(day.temp.day).toFixed(1)}\r\n                </Text>\r\n                <Fontisto\r\n                  name={icons[day.weather[0].main]}\r\n                  size={68}\r\n                  color=\"white\"\r\n                />\r\n              </View>\r\n              <Text style={styles.description}>{day.weather[0].main}</Text>\r\n              <Text style={styles.tinyText}>{day.weather[0].description}</Text>\r\n            </View>\r\n          ))\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"tomato\",\r\n  },\r\n  city: {\r\n    flex: 1.2,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  cityName: {\r\n    fontSize: 58,\r\n    fontWeight: \"500\",\r\n    color: \"white\",\r\n  },\r\n  weather: {},\r\n  day: {\r\n    width: SCREEN_WIDTH,\r\n    alignItems: \"flex-start\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  temp: {\r\n    marginTop: 50,\r\n    fontWeight: \"600\",\r\n    fontSize: 100,\r\n    color: \"white\",\r\n  },\r\n  description: {\r\n    marginTop: -10,\r\n    fontSize: 30,\r\n    color: \"white\",\r\n    fontWeight: \"500\",\r\n  },\r\n  tinyText: {\r\n    marginTop: -5,\r\n    fontSize: 25,\r\n    color: \"white\",\r\n    fontWeight: \"500\",\r\n  },\r\n});\r\n"],"sourceRoot":""}